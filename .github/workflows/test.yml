name: test

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Check format
        run: deno fmt --check

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Check lint
        run: deno lint

  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
            ~/.local/share/deno-wasmbuild
          key: deno-${{ hashFiles('deno.lock') }}
          restore-keys: deno

      - name: Cache dependencies
        run: deno task cache

      - name: Run type check
        run: deno task check

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
            ~/.local/share/deno-wasmbuild
          key: deno-${{ hashFiles('deno.lock') }}
          restore-keys: deno

      - name: Cache dependencies
        run: deno task cache

      - name: Run tests
        run: deno task test --coverage=./coverage_profile

      - name: Create coverage report
        run: deno coverage ./coverage_profile --lcov --output=./coverage.lcov

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./
          file: ./coverage.lcov
          token: ${{ secrets.CODECOV_TOKEN }}
